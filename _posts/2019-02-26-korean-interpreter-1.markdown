---
layout: post
title:  "한국어 인터프리터 개발기 #1"
date:   2019-02-27 01:00:00
author: kosmes9779
categories: KosmesInterpreter
---

# 한국어 프로그래밍 언어

## 개요

언젠가부터 생각이 있었는데 여건이 안되서 미루고만 있었던 프로젝트가 있었다.

> 한국어로 된 프로그래밍 언어


단순히 번역에서 그치지않고 어순까지 변경하는 그런 언어를 만들고 싶었다. 예를 들면
```
(인자: 문자열[]) 시작 {
    가: 정수 = 10 선언;
}
```
같은 식으로 생각을 해봤다


## 컴파일러 vs 인터프리터

처음 계획은 범용 개발 언어를 생각했지만, 씨앗이 망한 이유 중 하나가 처음 개발부터 범용 언어를 보고 개발했기 때문이라는 글을 보고 교육 용 언어로 방향을 선회했다. 

언어의 롤모델은 파이선. 역시 교육용이기 때문에 실행 후 바로 결과를 확인할 필요성이 있다고 생각하여 인터프리터로 결정했다.

하지만 역시 어플리케이션을 개발할 수 있게 만들고 싶기에 바이트코드 기반 VM과 컴파일러를 개발할 계획중이다.

## 문법

지금까지 나온 한글 프로그래밍 언어의 비판 중 가장 동의하는 부분이 그냥 단순하게 번역한 것 같다라는 것이다.

```
많약(가 == 10) {

}
```
단순히 이 구문만으로 보면 많약이라는 것 자체가 번역투 같다는 점이다. 실생활에서 쓰지 않는 다는 것이다. 그래서 문법을 실 생활에서 많이 쓰는 것으로 가져왔다. 

하지만 역시 한국어 프로그래밍 언어를 만들면 한국만 갈라파고스화 될 것을 우려하는 글을 보았을 때 그 점도 동의를 했다. 그렇기 때문에 기존 문법들에서 크게 벗어나려고 하지 않았다.


### 선언문

#### 변수

```
이름: 문자열 = "홍길동" 선언;
나이: 정수 = 20 선언;
학생들: 문자열[] = { "김수한무", "홍길동" } 선언;
```

#### 함수

기본적으로 함수의 반환값이 지정되지 않았다면 반환형식이 없는 것으로 선언된다.
```
(할말: 문자열)말하기 {
    (할말 + "\n")출력
}
```


반환값 선언하는 방법은 다음과 같다.
```
(우항: 정수, 좌항: 정수)더하기: 정수 {

}
```

#### 구조체

```
개 구조체 {
    나이: 정수;
    종류: 문자열;
}

멍멍이: 개 = { .나이 = 1, .종류 = "치와와" } 선언;
```


### 계산

```
나이: 정수 = 2018 - 1990 선언;
```


### 조건문

나이가 20 미만이면 미성년자!
```
(나이 < 20) 이면 {
    ("미성년자!")출력
} 또는 (나이 >= 20) 이면 {
    ("성인!")출력
} 아니면 {
    // 사람이 아닌데?
}
```


### 반복문

```
// ㅅ는 색인의 ㅅ이다.
(ㅅ: 정수 = 0; ㅅ < 10; ㅅ++)일때 {
    (ㅅ)출력
}
```

나이가 20미만이면 나이를 계속 추가!
```
(나이 < 20) 동안 {
    ()새해;
}
```

### 함수 호출

```
("안녕, 세상아!")출력;
```

## 왜 이것밖에 없어요?

자세한 설명을 하기 전에 용어 정리를 해야할 필요가 있다. 다만 주의해야할 점은 이 용어들은 이 포스트에서만 사용될 용어다.

 * 기본 문법: 기본 문법은 컴퓨터가 인식할 수 있는 것들. 즉 메모리에 그대로 표현될 수 있는 것들을 의미한다.
 * 확장 문법: 확장 문법은 컴파일러에서 기본 문법 이상으로 지원하는 기능들을 의미한다. 예를 들면 클래스, 선택문(switch) 같은 것들을 의미한다.


코딩을 하시던 분들이 보시면 무언가 많이 없는 것을 알 수 있다. 이유인즉슨 아직까지 완벽하게 규칙이 정의된 것도 아니고 1차 목표가 기본 문법만 구현하는 것이기 때문이다. 나중에 확장 문법을 추가할 예정이지만 아직까지 구체적으로 결정된 것들은 선택문과 여러 변수 타입(정수, 실수)들 뿐이다.


## 결론

재미있을 것 같다.
